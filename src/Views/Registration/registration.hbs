<style>
    #form-container {
        max-width: 40vw;
    }

    #main-container {
        width: 100%;
        background-image: url("/login-bg.jpg");
        background-size: cover;
        background-repeat: no-repeat;
    }

    .card-registration .select-input.form-control[readonly]:not([disabled]) {
        font-size: 1rem;
        line-height: 2.15;
        padding-left: .75em;
        padding-right: .75em;
    }

    .card-registration .select-arrow {
        top: 13px;
    }

    .district-dropdown,
    .ward-dropdown {
        display: none;
    }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

<section class="vh-100" id="main-container">
    <div class="container h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="card-body p-5 bg-opacity-75 rounded" id="form-container"
                style="background-color:rgb(255,255,255,0.9)">
                <h2 class="text-uppercase text-center mb-2">Đăng kí tài khoản</h2>
                <form action="/api/user/register" method="post" class="w-100 h-100">
                    <div class="form-group">
                        <label for="name">Tên</label>
                        <input type="text" class="form-control form-control-lg" id="name" name="name"
                            placeholder="Nhập tên" required>
                    </div>

                    <div class="form-group">
                        <label for="dateOfBirth">Ngày Sinh</label>
                        <input type="text" class="form-control form-control-lg" id="dateOfBirth" name="dateOfBirth"
                            placeholder="Chọn ngày sinh" required>
                    </div>


                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" class="form-control form-control-lg" id="email" name="email"
                            placeholder="Nhập địa chỉ email" required>
                    </div>

                    <div class="form-group">
                        <label for="phone">Số điện thoại</label>
                        <input type="tel" class="form-control form-control-lg" id="phone" name="phone"
                            placeholder="Nhập số điện thoại" required>
                    </div>

                    <div class="form-group">
                        <label for="password">Mật khẩu</label>
                        <div class="input-group">
                            <input type="password" class="form-control form-control-lg" id="password" name="password"
                                placeholder="Nhập mật khẩu" required>
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="confirmPassword">Xác nhận mật khẩu</label>
                        <div class="input-group">
                            <input type="password" class="form-control form-control-lg" id="confirmPassword"
                                name="confirmPassword" placeholder="Nhập lại mật khẩu" required>
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="checkRole">Chọn loại tài khoản</label>
                        <div class="d-flex justify-content-around">
                            <div class="form-check">
                                <label class="form-check-label">
                                    <input type="radio" class="form-check-input" name="optradio" id="wardRadio"
                                        value="ward">Phường
                                </label>
                            </div>
                            <div class="form-check">
                                <label class="form-check-label">
                                    <input type="radio" class="form-check-input" name="optradio" id="districtRadio"
                                        value="district">Quận
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group ward-dropdown" id="districtDropdown">
                        <label for="selectDistrict">Chọn Quận</label>
                        <select class="form-control form-control-lg" id="selectDistrict" name="selectDistrict">
                        </select>
                    </div>

                    <div class="form-group district-dropdown" id="wardDropdown">
                        <label for="selectWard">Chọn Phường</label>
                        <select class="form-control form-control-lg" id="selectWard" name="selectWard">
                        </select>
                    </div>

                    <div class="m-auto d-flex justify-content-center align-items-center"><button type="button"
                            class="btn btn-primary mt-3 mx-auto w-100" id="registration">Đăng kí</button></div>
                    <a class="justify-self-center" href="/api/registration">
                        Quay lại
                    </a>
                </form>
            </div>
        </div>
    </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
    toastr.options.closeButton = true;
    toastr.options = {
        "closeButton": true,
        "debug": false,
        "newestOnTop": false,
        "progressBar": false,
        "positionClass": "toast-top-center",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "300",
        "timeOut": "2000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
    }
    var listWardOfEachDistrict = [];
    const selectDistrict = document.getElementById('selectDistrict');
    const selectWard = document.getElementById('selectWard');

    selectDistrict.addEventListener('change', function () {
        const selectedDistrictId = this.value;

        const listWardOfSelectedDistrict = listWardOfEachDistrict.filter(ward => ward.districtRefId == selectedDistrictId);
        selectWard.innerHTML = '';
        listWardOfSelectedDistrict.forEach(ward => {
            const option = document.createElement('option');
            option.className = `${ward.wardId}`;
            option.value = ward.wardId;
            option.innerText = ward.wardName;
            selectWard.appendChild(option);
        });
    });

    fetch('https://map-application-officer.vercel.app//api/district/getAll-dis')
        .then(response => response.json())
        .then(data => {
            const listWard = data.data;
            const selectWard = document.getElementById('selectDistrict');
            selectWard.innerHTML = '';
            listWard.forEach(item => {
                const option = document.createElement('option');
                option.className = `${item.disId}`;
                option.value = item.disId;
                option.innerText = item.disName;
                selectWard.appendChild(option);
            });
        });

    fetch('https://map-application-officer.vercel.app//api/ward/getAll-ward')
        .then(response => response.json())
        .then(data => {
            const listWard = data.data;
            const selectWard = document.getElementById('selectWard');
            selectWard.innerHTML = '';
            const listDistrict = document.querySelectorAll('#selectDistrict option');
            const districtRadio = document.getElementById('districtRadio');
            listWard.forEach(ward => {
                listWardOfEachDistrict.push(ward);
            });
            const listWardOfSelectedDistrict = listWardOfEachDistrict.filter(ward => ward.districtRefId == document.getElementById('selectDistrict').value);
            selectWard.innerHTML = '';
            listWardOfSelectedDistrict.forEach(ward => {
                const option = document.createElement('option');
                option.className = `${ward.wardId}`;
                option.value = ward.wardId;
                option.innerText = ward.wardName;
                selectWard.appendChild(option);
            });
        });

    document.querySelectorAll('input[name="optradio"]').forEach(function (radio) {
        radio.addEventListener('change', function () {
            const districtDropdown = document.getElementById('districtDropdown');
            const wardDropdown = document.getElementById('wardDropdown');
            if (this.value === 'ward') {
                districtDropdown.style.display = 'block';
                wardDropdown.style.display = 'block';
            } else {
                districtDropdown.style.display = 'block';
                wardDropdown.style.display = 'none';
            }
        });
    });

    document.querySelectorAll('#togglePassword').forEach(button => {
        button.addEventListener('click', function () {
            const password = document.getElementById('password');
            const confirmPassword = document.getElementById('confirmPassword');
            if (password.type === 'password') {
                password.type = 'text';
                confirmPassword.type = 'text';
            } else {
                password.type = 'password';
                confirmPassword.type = 'password';
            }
        });
    });

    document.getElementById('registration').addEventListener('click', async function () {
        const name = $('#name');
        const email = $('#email');
        const date = $('#dateOfBirth');
        const password = $('#password');
        const confirmPassword = $('#confirmPassword');
        const phone = $('#phone');
        const districtRadio = document.getElementById('districtRadio');
        const wardRadio = document.getElementById('wardRadio');
        const selectDistrict = $('#selectDistrict');
        const selectWard = $('#selectWard');
        let role = [];

        if (districtRadio.checked) {
            role = ['-1', selectDistrict.val()];
        } else {
            role = [selectWard.val(), selectDistrict.val()];
        }

        if (!name.val() || !email.val() || !password.val() || !confirmPassword.val() || !phone.val() || role === []) {
            toastr.error('Vui lòng nhập đầy đủ thông tin');
        } else if (!districtRadio.checked && !wardRadio.checked) {
            toastr.error('Vui lòng chọn loại tài khoản');
            name.removeClass('border-danger');
            email.removeClass('border-danger');
            password.removeClass('border-danger');
            confirmPassword.removeClass('border-danger');
            phone.removeClass('border-danger');
        } else if (phone.val().length < 10 || phone.val().length > 11) {
            toastr.error('Số điện thoại không hợp lệ');
            name.removeClass('border-danger');
            email.removeClass('border-danger');
            password.removeClass('border-danger');
            confirmPassword.removeClass('border-danger');
            phone.addClass('border-danger');
            phone.focus();
        } else if (isNaN(phone.val())) {
            toastr.error('Số điện thoại không hợp lệ');
            name.removeClass('border-danger');
            email.removeClass('border-danger');
            password.removeClass('border-danger');
            confirmPassword.removeClass('border-danger');
            phone.addClass('border-danger');
            phone.focus();
        } else if (!phone.val().match(/^[0-9]+$/)) {
            toastr.error('Số điện thoại không hợp lệ');
            name.removeClass('border-danger');
            email.removeClass('border-danger');
            password.removeClass('border-danger');
            confirmPassword.removeClass('border-danger');
            phone.addClass('border-danger');
            phone.focus();
        } else if (!email.val().match(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\.[A-Za-z]+$/)) {
            toastr.error('Email không hợp lệ');
            name.removeClass('border-danger');
            phone.removeClass('border-danger');
            password.removeClass('border-danger');
            confirmPassword.removeClass('border-danger');
            email.addClass('border-danger');
            email.focus();
        } else if (!password.val().match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{6,}$/)) {
            toastr.error('Mật khẩu phải có ít nhất 6 ký tự, bao gồm chữ hoa, chữ thường và số');
            name.removeClass('border-danger');
            phone.removeClass('border-danger');
            email.removeClass('border-danger');
            confirmPassword.removeClass('border-danger');
            password.addClass('border-danger');
            password.focus();
        } else if (!confirmPassword.val().match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{6,}$/)) {
            toastr.error('Mật khẩu phải có ít nhất 6 ký tự, bao gồm chữ hoa, chữ thường và số');
            name.removeClass('border-danger');
            phone.removeClass('border-danger');
            email.removeClass('border-danger');
            password.removeClass('border-danger');
            confirmPassword.addClass('border-danger');
            confirmPassword.focus();
        } else if (!date.val().match(/^[0-9]{2}\/[0-9]{2}\/[0-9]{4}$/)) {
            toastr.error('Ngày sinh không hợp lệ');
        } else if (password.val() !== confirmPassword.val()) {
            toastr.error('Mật khẩu không khớp');
            name.removeClass('border-danger');
            phone.removeClass('border-danger');
            email.removeClass('border-danger');
            password.removeClass('border-danger');
            confirmPassword.addClass('border-danger');
            confirmPassword.focus();
        } else {
            const response = await fetch('https://map-application-officer.vercel.app//api/user/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    name: name.val(),
                    email: email.val(),
                    date: date.val(),
                    password: password.val(),
                    phone: phone.val(),
                    role,
                })
            });
            if (response.status == 200) {
                toastr.options.onHidden = () => { window.location.href = "/api/registration" }
                toastr.success("Đăng kí cán bộ mới thành công.")
            } else {
                toastr.error('Email đã tồn tại');
            }
        }
    });

    flatpickr("#dateOfBirth", {
        dateFormat: "d/m/Y",
        placeholder: "Chọn ngày sinh",
        enableTime: false,
        theme: "light",
        wheel: true,
    });
</script>